# -*- coding: utf-8 -*-
"""Lecture 3 Iteration.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Zop1ubbmBmNthUikH4ynhyR0q6SdzFuy

# Contents
## 1. Updating variables
## 2. While statement
## 3. “Infinite loops” and break
## 4. Finishing iterations with continue
## 5. Definite loops using for

# 1. Updating variables
"""

# What will happen
x = x+1

# Before you can update a variable, you have to initialize it, usually with 
# a simple assignment
x = 0
x += 1
x = x + 1

x += 3

print (x)

"""# 2. The while statement"""

n = 5
while n > 0:
    print (n)
    n = n-1
print ('Blastoff!')

"""# 3. “Infinite loops” and break"""

n = 10
while True:
    print (n)
    n = n - 1
print ('Done!')

while True:
    line = input('> ')
    if line == 'done':
        break
    print (line)
print ('Done!')

"""# 4. Finishing iterations with continue"""

while True:
    line = input('> ')
    if line[0] == '#' :
        continue
    if line == 'done':
        break
    print (line)
print ('Done!')

"""# 5. Definite loops using for

Sometimes we want to loop through a set of things such as a list of words, the lines in a file or a list of numbers. 
When we have a list of things to loop through, we can construct a definite loop using a for statement. 
We call the while statement an indefinite loop because it simply loops until some condition becomes False whereas the for loop is looping through a known set of items so it runs through
as many iterations as there are items in the set.
"""

friends = ['Kashif', 'Murtaza', 'Omar']
for friend in friends:
    print ('Happy New Year:', friend)
print ('Done!')

# find largest values from [3, 41, 12, 9, 74, 15]

largest = None
print ('Before:', largest)
for itervar in [3, 41, 12, 9, 74, 15]:
    if largest is None or itervar > largest :
        largest = itervar
    print ('Loop:', itervar, largest)
print ('Largest:', largest)

# find smallest values from [3, 41, 12, 9, 74, 15]

# find Second largest values from [3, 41, 12, 9, 74, 15]